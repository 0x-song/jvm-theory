package gca_8;

/**
 * @Author 远志 zhangsong@cskaoyan.onaliyun.com
 * @Date 2024-09-06 20:09
 * @Version 1.0
 *
 *  垃圾收集器
 *    评价指标：吞吐量、GC延时(本次GC发生的时长 + 所有线程到达安全点的时间)
 *
 *
 *  STW
 *  oopMap(JVM在编译时生成的数据结构、记录了对象的信息，在安全点，oopMap提供对象的精确信息)、安全点(程序执行过程中，所有线程可以安全暂停的点，一般在方法调用、循环末尾、抛出异常位置)
 *  在垃圾回收时，JVM会触发STW事件，暂停所有的用户线程。GC线程使用OopMap快速定位对象引用，为了确保线程能够及时、安全暂停
 *  JVM会等待所有线程都到达安全点。一旦所有线程都在安全点，GC就可以安全地进行对象标记和回收
 *  到达安全点之后，如何让所有线程阻塞呢？？？？使用中断命令 
 *
 *  CMS：标记清除算法，存在垃圾碎片问题
 *      初始标记：标记GC roots，会STW，时间会很短
 *      并发标记：不会STW，多标、少标、漏标问题，最为耗时
 *      重新标记：重新扫描增量更新留下来的记录
 *      并发清除：清除垃圾
 */
public class GarbageCollector {
}
